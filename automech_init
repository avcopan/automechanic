#!/usr/bin/env python
""" compute geometries for species and store them in xyz files
"""

import os
import warnings
warnings.filterwarnings("ignore", message="numpy.dtype size changed")
warnings.filterwarnings("ignore", message="numpy.ufunc size changed")
import pandas
import argparse
from argparse import ArgumentDefaultsHelpFormatter as Formatter
import from_qtc.obtools
import automechanic.io

PARSER = argparse.ArgumentParser(formatter_class=Formatter)

PARSER.add_argument('-m',
                    '--mech_file',
                    type=str,
                    help="CHEMKIN mechanism file.")

PARSER.add_argument('-s',
                    '--species_csv',
                    type=str,
                    default='species.csv',
                    help="csv with 'species_id' column")

PARSER.add_argument('-S',
                    '--species_csv_out',
                    type=str,
                    default='species.csv',
                    help="[output] csv with 'species_id' and 'path' columns")

PARSER.add_argument('-x',
                    '--exclude_species',
                    type=str,
                    nargs='+',
                    default=['OHV', 'CHV'],
                    help="exclude reactions with these species")

PARSER.add_argument('-G',
                    '--geom_dir',
                    type=str,
                    default='geoms',
                    help="[output] directory for storing geometries")

PARSER.add_argument('-R',
                    '--reactions_csv_out',
                    type=str,
                    default='reactions.csv',
                    help="[output] csv file with 'reaction_id' column")

ARGS = vars(PARSER.parse_args())

MECH_FLE = ARGS['mech_file']
SPC_CSV = ARGS['species_csv']
SPC_CSV_OUT = ARGS['species_csv_out']
EXCL = ARGS['exclude_species']
GEOM_DIR = ARGS['geom_dir']
RXN_CSV_OUT = ARGS['reactions_csv_out']

MECH_STR = open(MECH_FLE).read()
GEOM_DIR = os.path.abspath(GEOM_DIR)
SPC_DF = pandas.read_csv(SPC_CSV)

print("Generating missing .xyz files for species...")

SPC_DF_OUT = automechanic.io.write_geometries(
    spc_df=SPC_DF,
    path=GEOM_DIR,
    sid2fname=lambda sid: from_qtc.obtools.get_smiles_filename(sid) + '.xyz'
)

print("Writing paths to species .xyz files to {:s}".format(SPC_CSV_OUT))

SPC_DF_OUT.to_csv(SPC_CSV_OUT)

print("Parsing the reaction mechanism...")

RXN_DF_OUT = automechanic.io.parse_mechanism(
    mech_str=MECH_STR,
    spc_df=SPC_DF,
    excl=EXCL
)

print("Writing reactions to {:s}".format(RXN_CSV_OUT))

RXN_DF_OUT.to_csv(RXN_CSV_OUT)
