""" test the automechanic.geom module
"""
from automechanic import geom


def test__resonance_graphs():
    """ test geom.resonance_averaged_molecule_graph
    """
    mgeo = (('C', (1.04875736, -0.08263227, 0.02520069)),
            ('C', (0.35689443, -1.08220115, 0.58834534)),
            ('C', (-1.08355137, -1.09969298, 0.60845334)),
            ('C', (-1.80589237, -2.05681355, 1.20880041)),
            ('C', (-3.24001909, -1.97861000, 1.27917334)),
            ('H', (-3.71446626, -2.28637223, 2.20524241)),
            ('H', (-3.76959941, -1.26680702, 0.65403921)),
            ('H', (0.55630109, 0.75863689, -0.45190632)),
            ('H', (2.13292129, -0.08512494, 0.03758668)),
            ('H', (0.89105972, -1.90022482, 1.06515672)),
            ('H', (-1.59381524, -0.26225598, 0.13760551)),
            ('H', (-1.33092095, -2.89685079, 1.70957399)))
    mgrph1 = (('C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H'),
              frozenset([(frozenset([0, 7]), 1), (frozenset([9, 1]), 1),
                         (frozenset([4, 6]), 1), (frozenset([3, 4]), 1),
                         (frozenset([1, 2]), 1), (frozenset([2, 3]), 2),
                         (frozenset([3, 11]), 1), (frozenset([0, 1]), 2),
                         (frozenset([8, 0]), 1), (frozenset([10, 2]), 1),
                         (frozenset([4, 5]), 1)]))
    mgrph2 = (('C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H'),
              frozenset([(frozenset([0, 7]), 1), (frozenset([9, 1]), 1),
                         (frozenset([4, 6]), 1), (frozenset([1, 2]), 1),
                         (frozenset([3, 4]), 2), (frozenset([3, 11]), 1),
                         (frozenset([0, 1]), 2), (frozenset([8, 0]), 1),
                         (frozenset([2, 3]), 1), (frozenset([10, 2]), 1),
                         (frozenset([4, 5]), 1)]))
    mgrph3 = (('C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H'),
              frozenset([(frozenset([0, 7]), 1), (frozenset([1, 2]), 2),
                         (frozenset([9, 1]), 1), (frozenset([4, 6]), 1),
                         (frozenset([0, 1]), 1), (frozenset([3, 4]), 2),
                         (frozenset([3, 11]), 1), (frozenset([8, 0]), 1),
                         (frozenset([2, 3]), 1), (frozenset([10, 2]), 1),
                         (frozenset([4, 5]), 1)]))
    assert set(geom.resonance_graphs(mgeo)) == set((mgrph1, mgrph2, mgrph3))


def test__radical_sites():
    """ test geom.radical_sites
    """
    mgeo = (('C', (1.10206, 0.05263, 0.02517)),
            ('C', (2.44012, 0.03045, 0.01354)),
            ('C', (3.23570, 0.06292, 1.20436)),
            ('H', (2.86296, -0.38925, 2.11637)),
            ('H', (4.29058, 0.30031, 1.12619)),
            ('H', (0.54568, -0.01805, -0.90370)),
            ('H', (0.53167, 0.14904, 0.94292)),
            ('H', (2.97493, -0.03212, -0.93001)))
    assert geom.radical_sites(mgeo) == (0, 2)


def test__addition_indices():
    """ test geom.addition_indices()
    """
    x_mgeo = (('C', (0.999749614329, 0.0815463557276, -0.05313151319214)),
              ('C', (0.2941554428798, -0.1333084924908, 1.06457863301)),
              ('C', (-1.198418794122, -0.141000266906, 1.104594274387)),
              ('H', (0.50843512849, 0.2642722240302, -1.003700339629)),
              ('H', (2.084674708630, 0.0790932629613, -0.040370798372)),
              ('H', (0.817176204583, -0.313348598161, 2.00117588120)),
              ('H', (-1.559370502273, -1.112686909705, 1.454564921229)),
              ('H', (-1.559370055401, 0.631682276162, 1.789879903006)),
              ('H', (-1.63349683031, 0.0486453884978, 0.1180237523367)))
    y_mgeo = (('O', (0.952632526586, -0.0627316796020, 0.0080078583889)),
              ('H', (1.892440257233, -0.0627316796020, 0.0080078583889)))
    xy_mgeo = (('C', (0.977343848365, -0.0764188131994, 0.13889740679)),
               ('H', (0.4624939859419, -1.02959411007, 0.155086468595)),
               ('H', (0.4440163978138, 0.783646033730, 0.528720307800)),
               ('C', (2.455537814018, -0.01753155811344, -0.002585548076801)),
               ('O', (2.853647414718, -0.998191131877, -0.945748607211)),
               ('C', (2.93814855121, 1.339952372503, -0.48915762596)),
               ('H', (2.921436713659, -0.251407370808, 0.959743143408)),
               ('H', (2.55606620911, -1.86222435081, -0.612788411425)),
               ('H', (2.608102938152, 2.147148597200, 0.172659593754)),
               ('H', (4.03290647398, 1.356511004561, -0.532775456763)),
               ('H', (2.58295049411, 1.55110745037, -1.504509980310)))

    assert geom.addition_indices(x_mgeo, y_mgeo, xy_mgeo) == (1, 0, 3, 4)


def test__abstraction_indices():
    """ test geom.abstraction_indices()
    """
    q1h_mgeo = (('O', (0.93765321301, -0.0694961347519, 0.0634458694842)),
                ('H', (0.658804017340, 0.569095658158, -0.609907417816)),
                ('H', (1.905540138587, -0.0375451195842, 0.02975561330711)))
    q2_mgeo = (('C', (1.057143885742, -0.0871511930619, -0.04674477657599)),
               ('C', (0.549259085892, -0.51012990525, -1.382882296554)),
               ('C', (-0.260448372050, -1.56319708610, -1.571575720915)),
               ('C', (-0.802023847371, -1.875359353914, -2.86287569869)),
               ('H', (-1.831195698706, -2.217304257490, -2.903573753718)),
               ('H', (-0.3887895375297, -1.405145731255, -3.748801522373)),
               ('H', (0.717942748466, -0.751768637238, 0.753718816634)),
               ('H', (0.69883028665, 0.923100928024, 0.1753578686900)),
               ('H', (2.150618291809, -0.0751291554072, -0.0472355720243)),
               ('H', (0.835509225958, 0.1125614404805, -2.22639811658)),
               ('H', (-0.576160339695, -2.182154423569, -0.735490006800)))
    q1_mgeo = (('O', (0.93765321301, -0.0694961347519, 0.0634458694842)),
               ('H', (1.905540138587, -0.0375451195842, 0.02975561330711)))
    q2h_mgeo = (('C', (1.059090261904, -0.0718353638623, 0.04370704218484)),
                ('C', (0.556035954077, -0.90540792220, -1.123283339366)),
                ('C', (1.01445783999, -2.32896395175, -1.007525457144)),
                ('C', (0.173740564627, -3.36721182331, -0.912436813201)),
                ('H', (0.703588929571, -0.47507467027, 0.998119886727)),
                ('H', (0.699161807464, 0.957951796736, -0.04438185099025)),
                ('H', (2.15372170793, -0.0479363138861, 0.0699595361787)),
                ('H', (-0.538544477665, -0.851175773075, -1.156172783989)),
                ('H', (0.926067547432, -0.484854481009, -2.065094239189)),
                ('H', (2.08749601614, -2.510032851609, -1.00152436791)),
                ('H', (0.545891741187, -4.38245608386, -0.824307699115)),
                ('H', (-0.902201513087, -3.223842453531, -0.91726794081)))
    idxs = geom.abstraction_indices(
        q1h_mgeo, q2_mgeo, q1_mgeo, q2h_mgeo)
    assert idxs == (2, 1, 0, 8)

    q1h_mgeo = (('O', (1.160649880891, 0.0627978268174, -0.0408330725075)),
                ('O', (0.670030192617, -0.810012591664, 1.01847301649)),
                ('C', (-0.762764327328, -0.771623494653, 0.971879813498)),
                ('C', (-1.286027334011, 0.630975793141, 1.25724343361)),
                ('C', (-1.286025794377, -1.319989887595, -0.350244634965)),
                ('H', (2.10820223046, -0.0822581224768, 0.135216457591)),
                ('H', (-1.10626335348, -1.433832526376, 1.775585055636)),
                ('H', (-0.959411887323, 1.34277748802, 0.4919543629624)),
                ('H', (-2.37990142664, 0.642772565761, 1.288621209488)),
                ('H', (-0.902576311752, 0.995523287157, 2.215796882617)),
                ('H', (-0.9025737237, -2.330572084284, -0.524722174920)),
                ('H', (-2.379899853887, -1.353045699721, -0.3558229455)),
                ('H', (-0.959410238052, -0.70497322095, -1.195279213213)))
    q2_mgeo = (('O', (1.07394324121, 0.0501743774966, 0.0668114667428)),
               ('O', (2.355943241199, 0.0501743774966, 0.0668114667428)))
    q1_mgeo = (('O', (1.01849391329, 0.02212499683403, 0.0463288404118)),
               ('O', (2.424344519778, -0.02924375645281, 0.05658010669234)),
               ('C', (2.80314339128, -1.38272890920, 0.3266805371647)),
               ('C', (2.338504665743, -1.833731474576, 1.707956931019)),
               ('C', (2.338505036357, -2.329364870800, -0.775684415566)),
               ('H', (3.89891588452, -1.38511658503, 0.327157185309)),
               ('H', (1.246260227299, -1.860092545692, 1.776726361401)),
               ('H', (2.71835895531, -2.83374919094, 1.940450620285)),
               ('H', (2.690750920592, -1.13759031891, 2.476303244045)),
               ('H', (2.690751556464, -1.981462639680, -1.752379053941)),
               ('H', (2.7183593275, -3.34202255559, -0.606530163155)),
               ('H', (1.24626061603, -2.380102757813, -0.829068367911)))
    q2h_mgeo = (('O', (1.09332243633, -0.0516790137299, -0.01278085883290)),
                ('O', (0.596198306921, -1.092054935846, -0.810333075830)),
                ('H', (2.065302405982, -0.05663139196237, -0.016577352153)))
    assert (geom.abstraction_indices(q1h_mgeo, q2_mgeo, q1_mgeo, q2h_mgeo)
            == (5, 1, 0, 2))


def test__migration_indices():
    """ test geom.migration_indices()
    """
    r_mgeo = (('O', (1.006636028216, 0.2257786650028, 0.0644406484321)),
              ('C', (2.331253782586, 0.142056802196, -0.01158096549740)),
              ('C', (2.84094192029, -0.92581464538, 1.002764947642)),
              ('C', (2.375560311923, -2.333001018581, 0.76176826563)),
              ('H', (2.888826500969, -3.161588618439, 1.225981401740)),
              ('H', (1.35477214531, -2.467634515391, 0.41859389541)),
              ('H', (2.787539902483, -0.1263811052961, -0.977151227590)),
              ('H', (2.90181278250, 1.048859567974, 0.245182068645)),
              ('H', (3.938784199965, -0.932096885897, 0.95886230021)),
              ('H', (2.573307107, -0.639971397340, 2.027838201709)))
    p_mgeo = (('O', (0.929118976322, 0.0764323904608, 0.0152642056113)),
              ('C', (0.4558038015574, 1.33463348769, -0.4333652384630)),
              ('C', (0.983249032954, 2.393834095771, 0.4758340099223)),
              ('C', (1.749966299023, 3.413680444234, 0.0658587293455)),
              ('H', (1.90018029033, 0.119433212253, -0.01064959069198)),
              ('H', (0.777754970296, 1.480534738790, -1.469377297601)),
              ('H', (-0.637491442658, 1.325547657004, -0.410460417628)),
              ('H', (0.702785032806, 2.322154540513, 1.524547422638)),
              ('H', (2.097802663631, 4.16880948135, 0.763519949982)),
              ('H', (2.040064325549, 3.51961137978, -0.974852937465)))
    assert geom.migration_indices(r_mgeo, p_mgeo) == (9, 0, 4, 2)


if __name__ == '__main__':
    test__radical_sites()
    test__resonance_graphs()
    test__abstraction_indices()
    test__addition_indices()
    test__migration_indices()
